// Code generated by thriftgo (0.4.3). DO NOT EDIT.

package base

import (
	"fmt"
)

type BaseResp struct {
	Code    int64  `thrift:"code,1" frugal:"1,default,i64" json:"code"`
	Message string `thrift:"message,2" frugal:"2,default,string" json:"message"`
	Time    string `thrift:"time,3" frugal:"3,default,string" json:"time"`
	Total   int64  `thrift:"total,4" frugal:"4,default,i64" json:"total"`
}

func NewBaseResp() *BaseResp {
	return &BaseResp{
		Code:    0,
		Message: "",
		Time:    "",
		Total:   0,
	}
}

func (p *BaseResp) InitDefault() {
	p.Code = 0
	p.Message = ""
	p.Time = ""
	p.Total = 0
}

func (p *BaseResp) GetCode() (v int64) {
	return p.Code
}

func (p *BaseResp) GetMessage() (v string) {
	return p.Message
}

func (p *BaseResp) GetTime() (v string) {
	return p.Time
}

func (p *BaseResp) GetTotal() (v int64) {
	return p.Total
}
func (p *BaseResp) SetCode(val int64) {
	p.Code = val
}
func (p *BaseResp) SetMessage(val string) {
	p.Message = val
}
func (p *BaseResp) SetTime(val string) {
	p.Time = val
}
func (p *BaseResp) SetTotal(val int64) {
	p.Total = val
}

func (p *BaseResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("BaseResp(%+v)", *p)
}

var fieldIDToName_BaseResp = map[int16]string{
	1: "code",
	2: "message",
	3: "time",
	4: "total",
}

type PageReq struct {
	Page     int64  `thrift:"page,1" frugal:"1,default,i64" json:"page"`
	PageSize int64  `thrift:"pageSize,2" frugal:"2,default,i64" json:"pageSize"`
	Keyword  string `thrift:"Keyword,3,optional" frugal:"3,optional,string" json:"Keyword,omitempty"`
}

func NewPageReq() *PageReq {
	return &PageReq{
		Page:     1,
		PageSize: 10,
		Keyword:  "",
	}
}

func (p *PageReq) InitDefault() {
	p.Page = 1
	p.PageSize = 10
	p.Keyword = ""
}

func (p *PageReq) GetPage() (v int64) {
	return p.Page
}

func (p *PageReq) GetPageSize() (v int64) {
	return p.PageSize
}

var PageReq_Keyword_DEFAULT string = ""

func (p *PageReq) GetKeyword() (v string) {
	if !p.IsSetKeyword() {
		return PageReq_Keyword_DEFAULT
	}
	return p.Keyword
}
func (p *PageReq) SetPage(val int64) {
	p.Page = val
}
func (p *PageReq) SetPageSize(val int64) {
	p.PageSize = val
}
func (p *PageReq) SetKeyword(val string) {
	p.Keyword = val
}

func (p *PageReq) IsSetKeyword() bool {
	return p.Keyword != PageReq_Keyword_DEFAULT
}

func (p *PageReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PageReq(%+v)", *p)
}

var fieldIDToName_PageReq = map[int16]string{
	1: "page",
	2: "pageSize",
	3: "Keyword",
}

type IdReq struct {
	Id int64 `thrift:"id,1" frugal:"1,default,i64" json:"id"`
}

func NewIdReq() *IdReq {
	return &IdReq{}
}

func (p *IdReq) InitDefault() {
}

func (p *IdReq) GetId() (v int64) {
	return p.Id
}
func (p *IdReq) SetId(val int64) {
	p.Id = val
}

func (p *IdReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("IdReq(%+v)", *p)
}

var fieldIDToName_IdReq = map[int16]string{
	1: "id",
}

type NilResponse struct {
}

func NewNilResponse() *NilResponse {
	return &NilResponse{}
}

func (p *NilResponse) InitDefault() {
}

func (p *NilResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("NilResponse(%+v)", *p)
}

var fieldIDToName_NilResponse = map[int16]string{}
