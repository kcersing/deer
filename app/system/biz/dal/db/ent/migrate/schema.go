// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SysApisColumns holds the columns for the "sys_apis" table.
	SysApisColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "path", Type: field.TypeString, Comment: "API path | API 路径"},
		{Name: "title", Type: field.TypeString, Comment: "API title | API 名称"},
		{Name: "description", Type: field.TypeString, Comment: "API description | API 描述"},
		{Name: "api_group", Type: field.TypeString, Comment: "API group | API 分组"},
		{Name: "method", Type: field.TypeString, Comment: "HTTP method | HTTP 请求类型", Default: "POST"},
	}
	// SysApisTable holds the schema information for the "sys_apis" table.
	SysApisTable = &schema.Table{
		Name:       "sys_apis",
		Columns:    SysApisColumns,
		PrimaryKey: []*schema.Column{SysApisColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "api_path_method",
				Unique:  true,
				Columns: []*schema.Column{SysApisColumns[5], SysApisColumns[9]},
			},
		},
	}
	// SysDictColumns holds the columns for the "sys_dict" table.
	SysDictColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "title", Type: field.TypeString, Comment: "the title shown in the ui | 展示名称 （建议配合i18n）"},
		{Name: "name", Type: field.TypeString, Unique: true, Comment: "the name of dictionary for search | 字典搜索名称"},
		{Name: "description", Type: field.TypeString, Comment: "the description of dictionary | 字典描述"},
	}
	// SysDictTable holds the schema information for the "sys_dict" table.
	SysDictTable = &schema.Table{
		Name:       "sys_dict",
		Columns:    SysDictColumns,
		PrimaryKey: []*schema.Column{SysDictColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "dict_title",
				Unique:  true,
				Columns: []*schema.Column{SysDictColumns[6]},
			},
			{
				Name:    "dict_name",
				Unique:  true,
				Columns: []*schema.Column{SysDictColumns[7]},
			},
		},
	}
	// SysDicthtColumns holds the columns for the "sys_dictht" table.
	SysDicthtColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "title", Type: field.TypeString, Comment: "the title shown in the ui | 展示名称 （建议配合i18n）"},
		{Name: "key", Type: field.TypeString, Comment: "key | 键"},
		{Name: "value", Type: field.TypeString, Comment: "value | 值"},
		{Name: "dict_id", Type: field.TypeInt64, Nullable: true, Comment: "Dictionary ID | 字典ID"},
	}
	// SysDicthtTable holds the schema information for the "sys_dictht" table.
	SysDicthtTable = &schema.Table{
		Name:       "sys_dictht",
		Columns:    SysDicthtColumns,
		PrimaryKey: []*schema.Column{SysDicthtColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_dictht_sys_dict_dictht",
				Columns:    []*schema.Column{SysDicthtColumns[9]},
				RefColumns: []*schema.Column{SysDictColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "dictht_title",
				Unique:  true,
				Columns: []*schema.Column{SysDicthtColumns[6]},
			},
			{
				Name:    "dictht_key",
				Unique:  true,
				Columns: []*schema.Column{SysDicthtColumns[7]},
			},
			{
				Name:    "dictht_value",
				Unique:  true,
				Columns: []*schema.Column{SysDicthtColumns[8]},
			},
			{
				Name:    "dictht_dict_id",
				Unique:  true,
				Columns: []*schema.Column{SysDicthtColumns[9]},
			},
		},
	}
	// SysLogsColumns holds the columns for the "sys_logs" table.
	SysLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "type", Type: field.TypeString, Comment: "type of log | 日志类型"},
		{Name: "method", Type: field.TypeString, Comment: "method of log | 日志请求方法"},
		{Name: "api", Type: field.TypeString, Comment: "api of log | 日志请求api"},
		{Name: "success", Type: field.TypeBool, Comment: "success of log | 日志请求是否成功"},
		{Name: "req_content", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "content of request log | 日志请求内容"},
		{Name: "resp_content", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "content of response log | 日志返回内容"},
		{Name: "ip", Type: field.TypeString, Nullable: true, Comment: "ip of log | 日志IP"},
		{Name: "user_agent", Type: field.TypeString, Nullable: true, Comment: "user_agent of log | 日志用户客户端"},
		{Name: "operatorsr", Type: field.TypeString, Nullable: true, Comment: "operator of log | 日志操作者"},
		{Name: "time", Type: field.TypeInt64, Nullable: true, Comment: "time of log(millisecond) | 日志时间(毫秒)"},
		{Name: "identity", Type: field.TypeInt64, Nullable: true, Comment: "1会员2员工 | 身份"},
	}
	// SysLogsTable holds the schema information for the "sys_logs" table.
	SysLogsTable = &schema.Table{
		Name:       "sys_logs",
		Columns:    SysLogsColumns,
		PrimaryKey: []*schema.Column{SysLogsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "logs_api",
				Unique:  false,
				Columns: []*schema.Column{SysLogsColumns[7]},
			},
		},
	}
	// SysMenusColumns holds the columns for the "sys_menus" table.
	SysMenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "path", Type: field.TypeString, Nullable: true, Comment: "index path | 菜单路由路径", Default: ""},
		{Name: "name", Type: field.TypeString, Comment: "index name | 菜单名称"},
		{Name: "order_no", Type: field.TypeInt64, Comment: "sorting numbers | 排序编号", Default: 0},
		{Name: "disabled", Type: field.TypeInt64, Nullable: true, Comment: "disable status | 是否停用", Default: 0},
		{Name: "ignore", Type: field.TypeBool, Nullable: true, Comment: "当前路由是否渲染菜单项，为 true 的话不会在菜单中显示，但可通过路由地址访问", Default: false},
		{Name: "type", Type: field.TypeString, Comment: "type | 菜单类别"},
		{Name: "level", Type: field.TypeInt64, Comment: "menu level | 菜单层级"},
		{Name: "menu_type", Type: field.TypeInt64, Comment: "menu type | 菜单类型 0 目录 1 菜单 2 按钮"},
		{Name: "redirect", Type: field.TypeString, Nullable: true, Comment: "redirect path | 跳转路径 （外链）", Default: ""},
		{Name: "component", Type: field.TypeString, Nullable: true, Comment: "the path of vue file | 组件路径", Default: ""},
		{Name: "title", Type: field.TypeString, Comment: "menu name | 菜单显示标题"},
		{Name: "icon", Type: field.TypeString, Comment: "menu icon | 菜单图标"},
		{Name: "hidden", Type: field.TypeInt64, Comment: "hidden "},
		{Name: "sort", Type: field.TypeInt64, Comment: "sort"},
		{Name: "url", Type: field.TypeString, Comment: "url"},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true, Comment: "parent menu ID | 父菜单ID"},
	}
	// SysMenusTable holds the schema information for the "sys_menus" table.
	SysMenusTable = &schema.Table{
		Name:       "sys_menus",
		Columns:    SysMenusColumns,
		PrimaryKey: []*schema.Column{SysMenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_menus_sys_menus_children",
				Columns:    []*schema.Column{SysMenusColumns[21]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "type", Type: field.TypeString, Comment: "类型[1:用户user;2:会员member]"},
		{Name: "to_user_id", Type: field.TypeString, Comment: "该消息接受者ID"},
		{Name: "from_user_id", Type: field.TypeString, Comment: "该消息发送者ID"},
		{Name: "content", Type: field.TypeString, Comment: "消息内容"},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "messages_to_user_id_from_user_id",
				Unique:  false,
				Columns: []*schema.Column{MessagesColumns[6], MessagesColumns[7]},
			},
		},
	}
	// SysRolesColumns holds the columns for the "sys_roles" table.
	SysRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "role name | 角色名"},
		{Name: "value", Type: field.TypeString, Unique: true, Comment: "role value for permission control in front end | 角色值，用于前端权限控制"},
		{Name: "default_router", Type: field.TypeString, Comment: "default menu : dashboard | 默认登录页面", Default: "dashboard"},
		{Name: "remark", Type: field.TypeString, Comment: "remark | 备注", Default: ""},
		{Name: "order_no", Type: field.TypeInt64, Comment: "order number | 排序编号", Default: 0},
		{Name: "apis", Type: field.TypeJSON, Comment: "apis"},
	}
	// SysRolesTable holds the schema information for the "sys_roles" table.
	SysRolesTable = &schema.Table{
		Name:       "sys_roles",
		Columns:    SysRolesColumns,
		PrimaryKey: []*schema.Column{SysRolesColumns[0]},
	}
	// SysSmsColumns holds the columns for the "sys_sms" table.
	SysSmsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "notice_count", Type: field.TypeInt64, Comment: "通知短信数量", Default: 0},
		{Name: "used_notice", Type: field.TypeInt64, Comment: "已用通知", Default: 0},
	}
	// SysSmsTable holds the schema information for the "sys_sms" table.
	SysSmsTable = &schema.Table{
		Name:       "sys_sms",
		Columns:    SysSmsColumns,
		PrimaryKey: []*schema.Column{SysSmsColumns[0]},
	}
	// SysSmsLogColumns holds the columns for the "sys_sms_log" table.
	SysSmsLogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "mobile", Type: field.TypeString, Comment: "手机号"},
		{Name: "biz_id", Type: field.TypeString, Comment: "BizId"},
		{Name: "code", Type: field.TypeString, Comment: "验证码"},
		{Name: "content", Type: field.TypeString, Comment: "内容"},
		{Name: "notify_type", Type: field.TypeInt64, Nullable: true, Comment: "通知类型[1会员;2员工]"},
		{Name: "template", Type: field.TypeString, Comment: "短信模板"},
	}
	// SysSmsLogTable holds the schema information for the "sys_sms_log" table.
	SysSmsLogTable = &schema.Table{
		Name:       "sys_sms_log",
		Columns:    SysSmsLogColumns,
		PrimaryKey: []*schema.Column{SysSmsLogColumns[0]},
	}
	// RoleMenusColumns holds the columns for the "role_menus" table.
	RoleMenusColumns = []*schema.Column{
		{Name: "role_id", Type: field.TypeInt64},
		{Name: "menu_id", Type: field.TypeInt64},
	}
	// RoleMenusTable holds the schema information for the "role_menus" table.
	RoleMenusTable = &schema.Table{
		Name:       "role_menus",
		Columns:    RoleMenusColumns,
		PrimaryKey: []*schema.Column{RoleMenusColumns[0], RoleMenusColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_menus_role_id",
				Columns:    []*schema.Column{RoleMenusColumns[0]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "role_menus_menu_id",
				Columns:    []*schema.Column{RoleMenusColumns[1]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SysApisTable,
		SysDictTable,
		SysDicthtTable,
		SysLogsTable,
		SysMenusTable,
		MessagesTable,
		SysRolesTable,
		SysSmsTable,
		SysSmsLogTable,
		RoleMenusTable,
	}
)

func init() {
	SysApisTable.Annotation = &entsql.Annotation{
		Table: "sys_apis",
	}
	SysDictTable.Annotation = &entsql.Annotation{
		Table: "sys_dict",
	}
	SysDicthtTable.ForeignKeys[0].RefTable = SysDictTable
	SysDicthtTable.Annotation = &entsql.Annotation{
		Table: "sys_dictht",
	}
	SysLogsTable.Annotation = &entsql.Annotation{
		Table: "sys_logs",
	}
	SysMenusTable.ForeignKeys[0].RefTable = SysMenusTable
	SysMenusTable.Annotation = &entsql.Annotation{
		Table: "sys_menus",
	}
	MessagesTable.Annotation = &entsql.Annotation{
		Table: "messages",
	}
	SysRolesTable.Annotation = &entsql.Annotation{
		Table: "sys_roles",
	}
	SysSmsTable.Annotation = &entsql.Annotation{
		Table: "sys_sms",
	}
	SysSmsLogTable.Annotation = &entsql.Annotation{
		Table: "sys_sms_log",
	}
	RoleMenusTable.ForeignKeys[0].RefTable = SysRolesTable
	RoleMenusTable.ForeignKeys[1].RefTable = SysMenusTable
}
