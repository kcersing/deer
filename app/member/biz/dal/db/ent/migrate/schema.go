// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MemberColumns holds the columns for the "member" table.
	MemberColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "password", Type: field.TypeString, Nullable: true, Comment: "password | 密码"},
		{Name: "username", Type: field.TypeString, Unique: true, Nullable: true, Comment: "账号 "},
		{Name: "mobile", Type: field.TypeString, Nullable: true, Comment: "mobile number | 手机号"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name | 名称"},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Comment: "avatar | 头像路径", Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "condition", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:潜在;1:正式;3:冻结;4:到期]", Default: 1},
	}
	// MemberTable holds the schema information for the "member" table.
	MemberTable = &schema.Table{
		Name:       "member",
		Columns:    MemberColumns,
		PrimaryKey: []*schema.Column{MemberColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "member_id",
				Unique:  false,
				Columns: []*schema.Column{MemberColumns[0]},
			},
			{
				Name:    "member_username",
				Unique:  false,
				Columns: []*schema.Column{MemberColumns[7]},
			},
			{
				Name:    "member_mobile",
				Unique:  false,
				Columns: []*schema.Column{MemberColumns[8]},
			},
		},
	}
	// MemberContractColumns holds the columns for the "member_contract" table.
	MemberContractColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "contract_id", Type: field.TypeInt64, Nullable: true, Comment: "原始合同id"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单id"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆id"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "name | 名称"},
		{Name: "sign", Type: field.TypeString, Nullable: true, Comment: "sign | 签字"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
		{Name: "member_product_id", Type: field.TypeInt64, Nullable: true, Comment: "会员产品id"},
	}
	// MemberContractTable holds the schema information for the "member_contract" table.
	MemberContractTable = &schema.Table{
		Name:       "member_contract",
		Columns:    MemberContractColumns,
		PrimaryKey: []*schema.Column{MemberContractColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_contract_member_member_contents",
				Columns:    []*schema.Column{MemberContractColumns[11]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "member_contract_member_product_member_product_contents",
				Columns:    []*schema.Column{MemberContractColumns[12]},
				RefColumns: []*schema.Column{MemberProductColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "membercontract_id",
				Unique:  false,
				Columns: []*schema.Column{MemberContractColumns[0]},
			},
			{
				Name:    "membercontract_venue_id",
				Unique:  false,
				Columns: []*schema.Column{MemberContractColumns[8]},
			},
			{
				Name:    "membercontract_order_id",
				Unique:  false,
				Columns: []*schema.Column{MemberContractColumns[7]},
			},
			{
				Name:    "membercontract_member_id",
				Unique:  false,
				Columns: []*schema.Column{MemberContractColumns[11]},
			},
			{
				Name:    "membercontract_member_product_id",
				Unique:  false,
				Columns: []*schema.Column{MemberContractColumns[12]},
			},
		},
	}
	// MemberContractContentColumns holds the columns for the "member_contract_content" table.
	MemberContractContentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "content", Type: field.TypeString, Nullable: true, Comment: "content | 内容"},
		{Name: "sign_img", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "sign_img | 会员签字b64 预处理"},
		{Name: "member_contract_id", Type: field.TypeInt64, Nullable: true, Comment: "合同ID"},
	}
	// MemberContractContentTable holds the schema information for the "member_contract_content" table.
	MemberContractContentTable = &schema.Table{
		Name:       "member_contract_content",
		Columns:    MemberContractContentColumns,
		PrimaryKey: []*schema.Column{MemberContractContentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_contract_content_member_contract_content",
				Columns:    []*schema.Column{MemberContractContentColumns[7]},
				RefColumns: []*schema.Column{MemberContractColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "membercontractcontent_id",
				Unique:  false,
				Columns: []*schema.Column{MemberContractContentColumns[0]},
			},
			{
				Name:    "membercontractcontent_member_contract_id",
				Unique:  false,
				Columns: []*schema.Column{MemberContractContentColumns[7]},
			},
		},
	}
	// MemberNoteColumns holds the columns for the "member_note" table.
	MemberNoteColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "note", Type: field.TypeString, Nullable: true, Comment: "内部备注", Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
	}
	// MemberNoteTable holds the schema information for the "member_note" table.
	MemberNoteTable = &schema.Table{
		Name:       "member_note",
		Columns:    MemberNoteColumns,
		PrimaryKey: []*schema.Column{MemberNoteColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_note_member_member_notes",
				Columns:    []*schema.Column{MemberNoteColumns[7]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "membernote_id",
				Unique:  false,
				Columns: []*schema.Column{MemberNoteColumns[0]},
			},
			{
				Name:    "membernote_member_id",
				Unique:  false,
				Columns: []*schema.Column{MemberNoteColumns[7]},
			},
		},
	}
	// MemberProductColumns holds the columns for the "member_product" table.
	MemberProductColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "sn", Type: field.TypeString, Nullable: true, Comment: "编号"},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Comment: "产品ID"},
		{Name: "venue_id", Type: field.TypeInt64, Nullable: true, Comment: "场馆ID"},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, Comment: "订单ID"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "产品名称"},
		{Name: "price", Type: field.TypeFloat64, Nullable: true, Comment: "产品价格"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
	}
	// MemberProductTable holds the schema information for the "member_product" table.
	MemberProductTable = &schema.Table{
		Name:       "member_product",
		Columns:    MemberProductColumns,
		PrimaryKey: []*schema.Column{MemberProductColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_product_member_member_products",
				Columns:    []*schema.Column{MemberProductColumns[12]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "memberproduct_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProductColumns[0]},
			},
			{
				Name:    "memberproduct_venue_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProductColumns[8]},
			},
			{
				Name:    "memberproduct_member_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProductColumns[12]},
			},
			{
				Name:    "memberproduct_product_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProductColumns[7]},
			},
			{
				Name:    "memberproduct_order_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProductColumns[9]},
			},
		},
	}
	// MemberProductPropertyColumns holds the columns for the "member_product_property" table.
	MemberProductPropertyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Comment: "状态[0:禁用;1:正常]", Default: 1},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
		{Name: "sn", Type: field.TypeString, Nullable: true, Comment: "编号"},
		{Name: "property_id", Type: field.TypeInt64, Nullable: true, Comment: "属性ID"},
		{Name: "type", Type: field.TypeString, Nullable: true, Comment: "类型"},
		{Name: "name", Type: field.TypeString, Nullable: true, Comment: "名称"},
		{Name: "duration", Type: field.TypeInt64, Nullable: true, Comment: "总时长"},
		{Name: "length", Type: field.TypeInt64, Nullable: true, Comment: "单次时长"},
		{Name: "count", Type: field.TypeInt64, Nullable: true, Comment: "总次数", Default: 0},
		{Name: "count_surplus", Type: field.TypeInt64, Nullable: true, Comment: "剩余次数", Default: 0},
		{Name: "price", Type: field.TypeFloat64, Nullable: true, Comment: "定价"},
		{Name: "validity_at", Type: field.TypeTime, Nullable: true, Comment: "生效时间"},
		{Name: "cancel_at", Type: field.TypeTime, Nullable: true, Comment: "作废时间"},
		{Name: "member_product_id", Type: field.TypeInt64, Nullable: true, Comment: "会员产品ID"},
	}
	// MemberProductPropertyTable holds the schema information for the "member_product_property" table.
	MemberProductPropertyTable = &schema.Table{
		Name:       "member_product_property",
		Columns:    MemberProductPropertyColumns,
		PrimaryKey: []*schema.Column{MemberProductPropertyColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_product_property_member_product_member_product_propertys",
				Columns:    []*schema.Column{MemberProductPropertyColumns[18]},
				RefColumns: []*schema.Column{MemberProductColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "memberproductproperty_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProductPropertyColumns[0]},
			},
			{
				Name:    "memberproductproperty_property_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProductPropertyColumns[8]},
			},
			{
				Name:    "memberproductproperty_member_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProductPropertyColumns[6]},
			},
			{
				Name:    "memberproductproperty_member_product_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProductPropertyColumns[18]},
			},
			{
				Name:    "memberproductproperty_validity_at",
				Unique:  false,
				Columns: []*schema.Column{MemberProductPropertyColumns[16]},
			},
			{
				Name:    "memberproductproperty_cancel_at",
				Unique:  false,
				Columns: []*schema.Column{MemberProductPropertyColumns[17]},
			},
		},
	}
	// MemberProfileColumns holds the columns for the "member_profile" table.
	MemberProfileColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "primary key"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, Comment: "created time"},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, Comment: "last update time"},
		{Name: "delete", Type: field.TypeInt64, Nullable: true, Comment: "last delete  1:已删除 0:未删除", Default: 0},
		{Name: "created_id", Type: field.TypeInt64, Nullable: true, Comment: "created", Default: 0},
		{Name: "intention", Type: field.TypeInt64, Nullable: true, Comment: "意向", Default: 0},
		{Name: "source", Type: field.TypeInt64, Nullable: true, Comment: "来源", Default: 0},
		{Name: "gender", Type: field.TypeInt64, Nullable: true, Comment: "性别 | [1:女性;2:男性;3:保密]", Default: 3},
		{Name: "birthday", Type: field.TypeTime, Nullable: true, Comment: "出生日期"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "email | 邮箱号"},
		{Name: "wecom", Type: field.TypeString, Nullable: true, Comment: "wecom | 微信号"},
		{Name: "relation_mid", Type: field.TypeInt64, Nullable: true, Comment: "关联会员", Default: 0},
		{Name: "relation_mame", Type: field.TypeString, Nullable: true, Comment: "关联会员"},
		{Name: "member_id", Type: field.TypeInt64, Nullable: true, Comment: "会员id"},
	}
	// MemberProfileTable holds the schema information for the "member_profile" table.
	MemberProfileTable = &schema.Table{
		Name:       "member_profile",
		Columns:    MemberProfileColumns,
		PrimaryKey: []*schema.Column{MemberProfileColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_profile_member_member_profile",
				Columns:    []*schema.Column{MemberProfileColumns[13]},
				RefColumns: []*schema.Column{MemberColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "memberprofile_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProfileColumns[0]},
			},
			{
				Name:    "memberprofile_member_id",
				Unique:  false,
				Columns: []*schema.Column{MemberProfileColumns[13]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MemberTable,
		MemberContractTable,
		MemberContractContentTable,
		MemberNoteTable,
		MemberProductTable,
		MemberProductPropertyTable,
		MemberProfileTable,
	}
)

func init() {
	MemberTable.Annotation = &entsql.Annotation{
		Table: "member",
	}
	MemberContractTable.ForeignKeys[0].RefTable = MemberTable
	MemberContractTable.ForeignKeys[1].RefTable = MemberProductTable
	MemberContractTable.Annotation = &entsql.Annotation{
		Table: "member_contract",
	}
	MemberContractContentTable.ForeignKeys[0].RefTable = MemberContractTable
	MemberContractContentTable.Annotation = &entsql.Annotation{
		Table: "member_contract_content",
	}
	MemberNoteTable.ForeignKeys[0].RefTable = MemberTable
	MemberNoteTable.Annotation = &entsql.Annotation{
		Table: "member_note",
	}
	MemberProductTable.ForeignKeys[0].RefTable = MemberTable
	MemberProductTable.Annotation = &entsql.Annotation{
		Table:   "member_product",
		Options: "AUTO_INCREMENT = 100000",
	}
	MemberProductPropertyTable.ForeignKeys[0].RefTable = MemberProductTable
	MemberProductPropertyTable.Annotation = &entsql.Annotation{
		Table: "member_product_property",
	}
	MemberProfileTable.ForeignKeys[0].RefTable = MemberTable
	MemberProfileTable.Annotation = &entsql.Annotation{
		Table: "member_profile",
	}
}
